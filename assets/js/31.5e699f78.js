(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{438:function(a,t,v){"use strict";v.r(t);var e=v(0),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java-内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java-内存管理"}},[a._v("#")]),a._v(" Java 内存管理")]),a._v(" "),v("h2",{attrs:{id:"栈内存-stack-memory"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#栈内存-stack-memory"}},[a._v("#")]),a._v(" 栈内存（Stack Memory）")]),a._v(" "),v("ul",[v("li",[a._v("栈是线程私有的，每个线程都有自己的栈。")]),a._v(" "),v("li",[a._v("用于存储局部变量、方法参数、返回地址以及一些基本数据类型。")]),a._v(" "),v("li",[a._v('具有快速的分配和释放，因为采用"后进先出"（LIFO）的数据结构。')]),a._v(" "),v("li",[a._v("栈内存的大小是有限的，一般由虚拟机预先定义。")])]),a._v(" "),v("h2",{attrs:{id:"堆内存-heap-memory"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#堆内存-heap-memory"}},[a._v("#")]),a._v(" 堆内存（Heap Memory）：")]),a._v(" "),v("ul",[v("li",[a._v("用于存储对象实例和数组等动态分配的对象。")]),a._v(" "),v("li",[a._v("Java 中的垃圾回收（Garbage Collection）发生在堆内存，回收不再使用的对象。")]),a._v(" "),v("li",[a._v("可以通过设置参数调整堆的大小，如 -Xmx（最大堆大小）和 -Xms（初始堆大小）。")]),a._v(" "),v("li",[a._v("堆内存分为新生代（Eden、Survivor）和老年代，不同的对象生成和生命周期影响对象在不同代中的分配。")])]),a._v(" "),v("h2",{attrs:{id:"方法区-method-area"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法区-method-area"}},[a._v("#")]),a._v(" 方法区（Method Area）")]),a._v(" "),v("ul",[v("li",[a._v("存储类信息、常量、静态变量、方法代码等。")]),a._v(" "),v("li",[a._v("方法区也叫永久代（Permanent Generation），但在 Java 8 后被元空间（Metaspace）取代。")]),a._v(" "),v("li",[a._v("元空间的大小可以根据需要动态扩展，并且可以释放未使用的内存。")])]),a._v(" "),v("h2",{attrs:{id:"其他相关知识点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他相关知识点"}},[a._v("#")]),a._v(" 其他相关知识点")]),a._v(" "),v("ul",[v("li",[a._v("值传递与引用传递：基本类型采用值传递，传递的是值的拷贝；引用类型采用引用传递，传递的是引用的地址。")]),a._v(" "),v("li",[a._v("自动内存管理：Java 通过垃圾回收器自动管理内存，释放不再使用的对象，避免了手动释放内存的问题。")]),a._v(" "),v("li",[a._v("内存泄漏：未释放不再使用的对象，导致内存占用不断增加，最终可能耗尽可用内存。")]),a._v(" "),v("li",[a._v("内存溢出（Out of Memory）：申请的内存超过了虚拟机的限制，导致程序崩溃。")]),a._v(" "),v("li",[a._v("弱引用、软引用和强引用：不同级别的引用可以影响垃圾回收时对象的生命周期。")]),a._v(" "),v("li",[a._v("栈帧（Stack Frame）：方法在执行时会在栈上创建栈帧，用于存储局部变量、操作数栈、方法返回值等。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);