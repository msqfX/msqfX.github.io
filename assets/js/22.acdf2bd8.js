(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{349:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"list-集合详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-集合详解"}},[t._v("#")]),t._v(" List 集合详解")]),t._v(" "),a("h2",{attrs:{id:"arraylist-和-vector-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-和-vector-的区别"}},[t._v("#")]),t._v(" ArrayList 和 Vector 的区别")]),t._v(" "),a("ol",[a("li",[t._v("线程安全性：\n"),a("ul",[a("li",[t._v("Vector 是线程安全的，它的方法都是同步的，多个线程可以同时访问和修改 Vector 对象；")]),t._v(" "),a("li",[t._v("而 ArrayList 是非线程安全的，它的方法不是同步的，多个线程访问和修改同一个 ArrayList 对象可能会导致数据竞争和并发访问的问题。")])])]),t._v(" "),a("li",[t._v("扩容方式：Vector 和 ArrayList 在扩容时采用不同的策略。"),a("strong",[t._v("Vector 在扩容时会增加一倍的容量，而 ArrayList 则会增加 50% 的容量。")])]),t._v(" "),a("li",[t._v("性能：\n"),a("ul",[a("li",[t._v("由于 Vector 是线程安全的，它在并发访问时需要进行同步操作，因此性能相对较低；")]),t._v(" "),a("li",[t._v("而 ArrayList 在单线程环境下的性能较好，但"),a("strong",[t._v("在多线程环境下需要使用同步机制来保证线程安全")]),t._v("。")])])]),t._v(" "),a("li",[t._v("初始容量：当创建 Vector 或 ArrayList 对象时，可以指定它们的初始容量。Vector 的默认初始容量为 10，而 ArrayList 的默认初始容量为 0。在实际使用中，可以根据数据量和性能需求等因素，选择合适的初始容量。")])]),t._v(" "),a("p",[a("em",[t._v("总结")])]),t._v(" "),a("ul",[a("li",[t._v("Vector 和 ArrayList 都是动态数组的实现，")]),t._v(" "),a("li",[t._v("但 Vector 是线程安全的，扩容方式和性能相对较差，初始容量为 10；")]),t._v(" "),a("li",[t._v("而 ArrayList 是非线程安全的，扩容方式和性能相对较好，初始容量为 0。")]),t._v(" "),a("li",[t._v("在实际使用中，应根据具体需求选择合适的动态数组实现。")])]),t._v(" "),a("h2",{attrs:{id:"arraylist-与-linkedlist-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-与-linkedlist-区别"}},[t._v("#")]),t._v(" ArrayList 与 LinkedList 区别")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("底层数据结构")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("ArrayList 底层采用"),a("strong",[t._v("数组")]),t._v("实现，")]),t._v(" "),a("li",[t._v("而 LinkedList 底层采用"),a("strong",[t._v("链表")]),t._v("实现。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("随机访问(相当于查询）和插入/删除操作的性能")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由于 ArrayList 的底层实现是数组，因此随机访问的性能较好，时间复杂度为 O(1)；而插入/删除操作需要移动其他元素，时间复杂度为 O(n)。")])]),t._v(" "),a("li",[a("p",[t._v("相反，LinkedList 的底层实现是链表，因此插入/删除操作的性能较好，"),a("strong",[t._v("平均")]),t._v("时间复杂度为 O(1)；而随机访问需要遍历链表，时间复杂度为 O(n)。")]),t._v(" "),a("blockquote",[a("p",[t._v("链表进行【插入/删除操作】时，在最坏的情况下，目标位置在链表的中间，"),a("strong",[t._v("需要遍历链表来找到目标位置")]),t._v("，导致时间复杂度为 O(n)。")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("内存占用")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("由于 ArrayList 底层采用数组实现，因此需要预先分配一定大小的连续内存空间，因此可能会浪费一些内存空间；")]),t._v(" "),a("li",[t._v("而 LinkedList 的底层采用链表实现，因此每个节点可以分布在不同的内存空间，内存利用率相对较高。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("迭代器的性能")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("由于 ArrayList 的底层实现是数组，因此迭代器的性能相对较好；")]),t._v(" "),a("li",[t._v("而 LinkedList 的底层实现是链表，因此迭代器需要遍历链表，性能较差。")])])])]),t._v(" "),a("p",[a("em",[t._v("总结")])]),t._v(" "),a("p",[t._v("ArrayList 和 LinkedList 都是线性表数据结构实现，但底层数据结构、随机访问和插入/删除操作的性能、内存占用和迭代器的性能等方面有所不同。在实际使用中，应根据具体需求选择合适的线性表数据结构实现。")]),t._v(" "),a("blockquote",[a("p",[t._v("我们在项目中"),a("strong",[t._v("一般是不会")]),t._v("使用到 "),a("code",[t._v("LinkedList")]),t._v(" 的，需要用到 "),a("code",[t._v("LinkedList")]),t._v(" 的场景几乎都可以使用 "),a("code",[t._v("ArrayList")]),t._v(" 来代替，并且，性能通常会更好！")])]),t._v(" "),a("h3",{attrs:{id:"具体实现参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体实现参考"}},[t._v("#")]),t._v(" 具体实现参考")]),t._v(" "),a("p",[t._v("这两种数据结构的代码实现可阅读以下两篇文章：")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_54088234/article/details/134186173?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22134186173%22%2C%22source%22%3A%22qq_54088234%22%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("【恋上数据结构】动态数组学习笔记"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qq_54088234/article/details/134239693?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22134239693%22%2C%22source%22%3A%22qq_54088234%22%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("【恋上数据结构】链表学习笔记"),a("OutboundLink")],1)])])]),t._v(" "),a("h3",{attrs:{id:"什么是迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是迭代器"}},[t._v("#")]),t._v(" 什么是迭代器")]),t._v(" "),a("p",[t._v("迭代器是一种 Java 中的接口，用于遍历集合类（Collection）和映射类（Map）中的元素。")]),t._v(" "),a("p",[t._v("使用迭代器可以依次访问集合中的每个元素，而不需要知道集合的内部实现方式。")]),t._v(" "),a("p",[t._v("在迭代器设计模式中，迭代器提供了一个通用的访问方法，使得可以在不暴露集合内部实现的情况下对集合进行迭代遍历。")]),t._v(" "),a("p",[a("em",[t._v("迭代器通常包含以下方法：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hasNext()")]),t._v("：判断集合中是否还有下一个元素，如果有返回 true，否则返回 false。")]),t._v(" "),a("li",[a("code",[t._v("next()")]),t._v("：获取集合中的下一个元素。")]),t._v(" "),a("li",[a("code",[t._v("remove()")]),t._v("：从集合中删除上一次返回的元素。")])]),t._v(" "),a("p",[t._v("需要注意的是，"),a("strong",[t._v("在多线程环境下，使用迭代器遍历集合时需要进行同步操作，以避免并发修改集合导致的数据竞争和不一致性问题")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayListExample")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个 ArrayList 对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" arrayList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向 ArrayList 中添加元素")]),t._v("\n        arrayList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arrayList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"banana"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        arrayList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orange"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个同步的 ArrayList 对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" synchronizedArrayList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collections")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("synchronizedList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用迭代器遍历 ArrayList")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("synchronizedArrayList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" iterator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" synchronizedArrayList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);